# Copy this file to `conf/settings.py` to put it into effect. It overrides the values defined
# in `resultsdb/config.py`.
SECRET_KEY = 'replace-me-with-something-random'
#SQLALCHEMY_DATABASE_URI = 'postgresql+psycopg2://dbuser:dbpassword@dbhost:dbport/dbname'
SQLALCHEMY_DATABASE_URI = 'sqlite:////var/tmp/resultsdb_db.sqlite'
FILE_LOGGING = False
LOGFILE = '/var/log/resultsdb/resultsdb.log'
SYSLOG_LOGGING = False
STREAM_LOGGING = True
#SHOW_DB_URI = False
RUN_HOST= '0.0.0.0'
RUN_PORT = 5001


# Set this to True or False to enable publishing to a message bus
MESSAGE_BUS_PUBLISH = False
# Name of the message bus plugin to use goes here.  'fedmsg' is installed by
# default, but you could create your own.
MESSAGE_BUS_PLUGIN = 'fedmsg'
# You can pass extra arguments to your message bus plugin here.  For instance,
# the fedmsg plugin expects an extra `modname` argument that can be used to
# configure the topic, like this:
#   <topic_prefix>.<environment>.<modname>.<topic>
# e.g. org.fedoraproject.prod.taskotron.result.new
MESSAGE_BUS_KWARGS = {'modname': 'resultsdb'}

## Alternatively, you could use the 'stomp' messaging plugin.
#MESSAGE_BUS_PLUGIN = 'stomp'
#MESSAGE_BUS_KWARGS = {
#    'destination': 'topic://VirtualTopic.eng.resultsdb.result.new',
#    'connection': {
#        'host_and_ports': [
#            ('broker01', '61612'),
#            ('broker02', '61612'),
#        ],
#        'use_ssl': True,
#        'ssl_key_file': '/path/to/key/file',
#        'ssl_cert_file': '/path/to/cert/file',
#        'ssl_ca_certs': '/path/to/ca/certs',
#    },
#}


# Specify which fields are required (in addition to those already required)
#  when creating result/group/testcase.
# If you want to set some result's extra-data as required, you can do so by
#  prepending 'data.' to the name (e.g. 'data.arch').
REQUIRED_DATA = {
    'create_result': [],
    'create_group': [],
    'create_testcase': [],
    }
